\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{edwards2015approximating}
\citation{edwards2015approximating}
\citation{karras2012maximizing}
\citation{lavender1992voronoi}
\citation{strain1999fast}
\citation{frisken2000adaptively}
\citation{boada2002voronoi,boada2008approximations}
\citation{teichmann1997polygonal,vleugels1998approximating}
\citation{bedorf2012sparse,karras2012maximizing,zhou2011data}
\citation{kim2014exact}
\citation{baert2013out,crassin2009gigavoxels,laine2011efficient,lefebvre2007compressed}
\citation{bastos2008gpu,park2010cuda}
\citation{yin2011fast}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\newlabel{sec:intro}{{1}{1}{Introduction}{section.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Related work}{1}{section.2}}
\citation{karras2012maximizing}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:conflict-find-1}{{1a}{2}{Subfigure 1a}{subfigure.1.1}{}}
\newlabel{sub@fig:conflict-find-1}{{(a)}{a}{Subfigure 1a\relax }{subfigure.1.1}{}}
\newlabel{fig:conflict-find-2}{{1b}{2}{Subfigure 1b}{subfigure.1.2}{}}
\newlabel{sub@fig:conflict-find-2}{{(b)}{b}{Subfigure 1b\relax }{subfigure.1.2}{}}
\newlabel{fig:conflict-find-4}{{1c}{2}{Subfigure 1c}{subfigure.1.3}{}}
\newlabel{sub@fig:conflict-find-4}{{(c)}{c}{Subfigure 1c\relax }{subfigure.1.3}{}}
\newlabel{fig:conflict-find-5}{{1d}{2}{Subfigure 1d}{subfigure.1.4}{}}
\newlabel{sub@fig:conflict-find-5}{{(d)}{d}{Subfigure 1d\relax }{subfigure.1.4}{}}
\newlabel{fig:conflict-find-6}{{1e}{2}{Subfigure 1e}{subfigure.1.5}{}}
\newlabel{sub@fig:conflict-find-6}{{(e)}{e}{Subfigure 1e\relax }{subfigure.1.5}{}}
\newlabel{fig:data-structures-1}{{1f}{2}{Subfigure 1f}{subfigure.1.6}{}}
\newlabel{sub@fig:data-structures-1}{{(f)}{f}{Subfigure 1f\relax }{subfigure.1.6}{}}
\newlabel{fig:data-structures-2}{{1g}{2}{Subfigure 1g}{subfigure.1.7}{}}
\newlabel{sub@fig:data-structures-2}{{(g)}{g}{Subfigure 1g\relax }{subfigure.1.7}{}}
\newlabel{fig:data-structures-3}{{1h}{2}{Subfigure 1h}{subfigure.1.8}{}}
\newlabel{sub@fig:data-structures-3}{{(h)}{h}{Subfigure 1h\relax }{subfigure.1.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces  \subref {fig:conflict-find-1} We have three objects, blue, red, and green with facets labeled A-I. \subref {fig:conflict-find-2} We construct an initial quadtree on the vertices using Karras' algorithm. \subref {fig:conflict-find-4} Zoomed-in view of the boundary cell (BCell) computation for each facet. These pairs are given in figure \subref {fig:data-structures-1}. \subref {fig:conflict-find-5} Conflict cells, which intersect more than one object, are highlighted. \subref {fig:conflict-find-6} The new quadtree after conflict resolution. \subref {fig:data-structures-1} The bounding cells (BCells) are stored in an array initially sorted on facet index (letters are used here for clarity). The quadtree array elements are structures which store child and parent pointers (``C/P'' in the figure). \subref {fig:data-structures-2} We sort the BCells array using a parallel radix sort on BCell address for fast indexed access. We then, in parallel on each element of the BCells array, store the BCells/FacetMap indices of the first and last facets in a given octree cell in \texttt  {FFacet} and \texttt  {LFacet}, respectively. \subref {fig:data-structures-3} For a given octree cell, we can find all contained facets for use in algorithm \ref  {alg:find-conflict-cells}. \relax }}{2}{figure.caption.1}}
\newlabel{fig:conflict-find}{{1}{2}{\protect \subref {fig:conflict-find-1} We have three objects, blue, red, and green with facets labeled A-I. \protect \subref {fig:conflict-find-2} We construct an initial quadtree on the vertices using Karras' algorithm. \protect \subref {fig:conflict-find-4} Zoomed-in view of the boundary cell (BCell) computation for each facet. These pairs are given in figure \protect \subref {fig:data-structures-1}. \protect \subref {fig:conflict-find-5} Conflict cells, which intersect more than one object, are highlighted. \protect \subref {fig:conflict-find-6} The new quadtree after conflict resolution. \protect \subref {fig:data-structures-1} The bounding cells (BCells) are stored in an array initially sorted on facet index (letters are used here for clarity). The quadtree array elements are structures which store child and parent pointers (``C/P'' in the figure). \protect \subref {fig:data-structures-2} We sort the BCells array using a parallel radix sort on BCell address for fast indexed access. We then, in parallel on each element of the BCells array, store the BCells/FacetMap indices of the first and last facets in a given octree cell in \texttt {FFacet} and \texttt {LFacet}, respectively. \protect \subref {fig:data-structures-3} For a given octree cell, we can find all contained facets for use in algorithm \ref {alg:find-conflict-cells}. \relax }{figure.caption.1}{}}
\newlabel{fig:scc-sort}{{\caption@xref {fig:scc-sort}{ on input line 219}}{2}{Detect conflict cells}{figure.caption.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Algorithm}{2}{section.3}}
\newlabel{sec:algorithm}{{3}{2}{Algorithm}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Build initial octree}{2}{subsection.3.1}}
\newlabel{sec:build-initial-octree}{{3.1}{2}{Build initial octree}{subsection.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Detect conflict cells}{2}{subsection.3.2}}
\newlabel{alg:L}{{1}{3}{Detect conflict cells}{AlgoLine.1.1}{}}
\newlabel{alg:A}{{3}{3}{Detect conflict cells}{AlgoLine.1.3}{}}
\newlabel{alg:i}{{4}{3}{Detect conflict cells}{AlgoLine.1.4}{}}
\newlabel{alg:f}{{5}{3}{Detect conflict cells}{AlgoLine.1.5}{}}
\newlabel{alg:7}{{6}{3}{Detect conflict cells}{AlgoLine.1.6}{}}
\newlabel{alg:16}{{15}{3}{Detect conflict cells}{AlgoLine.1.15}{}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces FIND\_CONFLICT\_CELLS\relax }}{3}{algocf.1}}
\newlabel{alg:find-conflict-cells}{{1}{3}{Detect conflict cells}{algocf.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Resolve conflict cells}{3}{subsection.3.3}}
\newlabel{eqn:q}{{1}{3}{Resolve conflict cells}{equation.3.1}{}}
\newlabel{eqn:r}{{2}{3}{Resolve conflict cells}{equation.3.2}{}}
\newlabel{eqn:p}{{3}{3}{Resolve conflict cells}{equation.3.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.1}Finding $a(s)$ -- \textit  {opposite} case}{3}{subsubsection.3.3.1}}
\newlabel{fig:conflict-resolution-x}{{2a}{4}{Subfigure 2a}{subfigure.2.1}{}}
\newlabel{sub@fig:conflict-resolution-x}{{(a)}{a}{Subfigure 2a\relax }{subfigure.2.1}{}}
\newlabel{fig:conflict-resolution-even}{{2b}{4}{Subfigure 2b}{subfigure.2.2}{}}
\newlabel{sub@fig:conflict-resolution-even}{{(b)}{b}{Subfigure 2b\relax }{subfigure.2.2}{}}
\newlabel{fig:conflict-resolution-all}{{2c}{4}{Subfigure 2c}{subfigure.2.3}{}}
\newlabel{sub@fig:conflict-resolution-all}{{(c)}{c}{Subfigure 2c\relax }{subfigure.2.3}{}}
\newlabel{fig:conflict-resolution-octree}{{2d}{4}{Subfigure 2d}{subfigure.2.4}{}}
\newlabel{sub@fig:conflict-resolution-octree}{{(d)}{d}{Subfigure 2d\relax }{subfigure.2.4}{}}
\newlabel{fig:conflict-resolution-adjacent-even}{{2e}{4}{Subfigure 2e}{subfigure.2.5}{}}
\newlabel{sub@fig:conflict-resolution-adjacent-even}{{(e)}{e}{Subfigure 2e\relax }{subfigure.2.5}{}}
\newlabel{fig:conflict-resolution-adjacent-all}{{2f}{4}{Subfigure 2f}{subfigure.2.6}{}}
\newlabel{sub@fig:conflict-resolution-adjacent-all}{{(f)}{f}{Subfigure 2f\relax }{subfigure.2.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  \subref {fig:conflict-resolution-x} A conflict cell with two lines from different objects. \subref {fig:conflict-resolution-even} Fitting boxes such that any box intersecting both lines contains at least one sample (red dots). \subref {fig:conflict-resolution-even} Fitting boxes such that any box intersecting both lines contains at least two samples. This ensures that an quadtree built from the samples using Karras' algorithm (panel \subref {fig:conflict-resolution-octree}) will have no leaf cells that intersect both lines, ensuring that the new quadtree is locally free of conflict cells. \relax }}{4}{figure.caption.4}}
\newlabel{fig:conflict-resolution}{{2}{4}{\protect \subref {fig:conflict-resolution-x} A conflict cell with two lines from different objects. \protect \subref {fig:conflict-resolution-even} Fitting boxes such that any box intersecting both lines contains at least one sample (red dots). \protect \subref {fig:conflict-resolution-even} Fitting boxes such that any box intersecting both lines contains at least two samples. This ensures that an quadtree built from the samples using Karras' algorithm (panel \protect \subref {fig:conflict-resolution-octree}) will have no leaf cells that intersect both lines, ensuring that the new quadtree is locally free of conflict cells. \relax }{figure.caption.4}{}}
\newlabel{eqn:t}{{4}{4}{Finding $a(s)$ -- \textit {opposite} case}{equation.3.4}{}}
\newlabel{eqn:ro}{{5}{4}{Finding $a(s)$ -- \textit {opposite} case}{equation.3.5}{}}
\newlabel{eqn:f}{{6}{4}{Finding $a(s)$ -- \textit {opposite} case}{equation.3.6}{}}
\newlabel{eqn:a1o}{{7}{4}{Finding $a(s)$ -- \textit {opposite} case}{equation.3.7}{}}
\newlabel{eqn:ao}{{8}{4}{Finding $a(s)$ -- \textit {opposite} case}{equation.3.8}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.2}Finding $a(s)$ -- \textit  {adjacent} case}{4}{subsubsection.3.3.2}}
\newlabel{eqn:ra}{{11}{4}{Finding $a(s)$ -- \textit {adjacent} case}{equation.3.11}{}}
\newlabel{eqn:a1a}{{12}{4}{Finding $a(s)$ -- \textit {adjacent} case}{equation.3.12}{}}
\newlabel{eqn:aa}{{13}{4}{Finding $a(s)$ -- \textit {adjacent} case}{equation.3.13}{}}
\citation{karras2012maximizing}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.3}Sampling}{5}{subsubsection.3.3.3}}
\newlabel{eqn:recurrence}{{18}{5}{Sampling}{equation.3.18}{}}
\newlabel{eqn:sample}{{22}{5}{Sampling}{equation.3.22}{}}
\newlabel{eqn:num-samples}{{28}{5}{Sampling}{equation.3.28}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.3.4}Iterate}{5}{subsubsection.3.3.4}}
\newlabel{sec:iterate}{{3.3.4}{5}{Iterate}{subsubsection.3.3.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Complexity analysis}{5}{subsection.3.4}}
\bibstyle{abbrv}
\bibdata{paper}
\bibcite{baert2013out}{1}
\bibcite{bastos2008gpu}{2}
\bibcite{bedorf2012sparse}{3}
\bibcite{boada2008approximations}{4}
\bibcite{boada2002voronoi}{5}
\bibcite{crassin2009gigavoxels}{6}
\bibcite{edwards2015approximating}{7}
\bibcite{frisken2000adaptively}{8}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Table of quadtree computation statistics and timings on datasets that are unmanageable using other methods. Columns are: \emph  {objects} - the number of objects in the dataset; \emph  {object facets} - the number of line segments (2D) of all objects in the dataset; \emph  {quadtree depth} - required quadtree depth in order to resolve objects; \emph  {time (ms)} - milliseconds to build the quadtree; \emph  {quad cells} - number of quadtree cells. Dataset ``\ref  {fig:glines} x2'' is a maze dataset increased in size by a factor of two in each dimension from \ref  {fig:glines}. \relax }}{6}{table.caption.6}}
\newlabel{tab:timings}{{1}{6}{Table of quadtree computation statistics and timings on datasets that are unmanageable using other methods. Columns are: \emph {objects} - the number of objects in the dataset; \emph {object facets} - the number of line segments (2D) of all objects in the dataset; \emph {quadtree depth} - required quadtree depth in order to resolve objects; \emph {time (ms)} - milliseconds to build the quadtree; \emph {quad cells} - number of quadtree cells. Dataset ``\ref {fig:glines} x2'' is a maze dataset increased in size by a factor of two in each dimension from \ref {fig:glines}. \relax }{table.caption.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Results and conclusions}{6}{section.4}}
\newlabel{fig:simple-conflicts}{{3a}{7}{Subfigure 3a}{subfigure.3.1}{}}
\newlabel{sub@fig:simple-conflicts}{{(a)}{a}{Subfigure 3a\relax }{subfigure.3.1}{}}
\newlabel{fig:simple-samples}{{3b}{7}{Subfigure 3b}{subfigure.3.2}{}}
\newlabel{sub@fig:simple-samples}{{(b)}{b}{Subfigure 3b\relax }{subfigure.3.2}{}}
\newlabel{fig:glines}{{3c}{7}{Subfigure 3c}{subfigure.3.3}{}}
\newlabel{sub@fig:glines}{{(c)}{c}{Subfigure 3c\relax }{subfigure.3.3}{}}
\newlabel{fig:ut1-samples}{{3d}{7}{Subfigure 3d}{subfigure.3.4}{}}
\newlabel{sub@fig:ut1-samples}{{(d)}{d}{Subfigure 3d\relax }{subfigure.3.4}{}}
\newlabel{fig:ut1}{{3e}{7}{Subfigure 3e}{subfigure.3.5}{}}
\newlabel{sub@fig:ut1}{{(e)}{e}{Subfigure 3e\relax }{subfigure.3.5}{}}
\newlabel{fig:ut2}{{3f}{7}{Subfigure 3f}{subfigure.3.6}{}}
\newlabel{sub@fig:ut2}{{(f)}{f}{Subfigure 3f\relax }{subfigure.3.6}{}}
\newlabel{fig:ut3}{{3g}{7}{Subfigure 3g}{subfigure.3.7}{}}
\newlabel{sub@fig:ut3}{{(g)}{g}{Subfigure 3g\relax }{subfigure.3.7}{}}
\newlabel{fig:ut4}{{3h}{7}{Subfigure 3h}{subfigure.3.8}{}}
\newlabel{sub@fig:ut4}{{(h)}{h}{Subfigure 3h\relax }{subfigure.3.8}{}}
\newlabel{fig:ut5}{{3i}{7}{Subfigure 3i}{subfigure.3.9}{}}
\newlabel{sub@fig:ut5}{{(i)}{i}{Subfigure 3i\relax }{subfigure.3.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces  \subref {fig:simple-conflicts} A toy dataset showing conflict cells after building the quadtree from object vertices. \subref {fig:simple-samples} The toy dataset showing how samples are collected. \subref {fig:glines} A maze test dataset. \subref {fig:ut1-samples} A complex dataset with 470 objects at vastly different scales in object size and spacing. \subref {fig:ut1}-\subref {fig:ut5} Complex dataset at different zoom levels up to 60K magnification. This shows the importance of an adaptive method such as a quadtree. \relax }}{7}{figure.caption.5}}
\newlabel{fig:results}{{3}{7}{\protect \subref {fig:simple-conflicts} A toy dataset showing conflict cells after building the quadtree from object vertices. \protect \subref {fig:simple-samples} The toy dataset showing how samples are collected. \protect \subref {fig:glines} A maze test dataset. \protect \subref {fig:ut1-samples} A complex dataset with 470 objects at vastly different scales in object size and spacing. \protect \subref {fig:ut1}-\protect \subref {fig:ut5} Complex dataset at different zoom levels up to 60K magnification. This shows the importance of an adaptive method such as a quadtree. \relax }{figure.caption.5}{}}
\bibcite{karras2012maximizing}{9}
\bibcite{kim2014exact}{10}
\bibcite{laine2011efficient}{11}
\bibcite{lavender1992voronoi}{12}
\bibcite{lefebvre2007compressed}{13}
\bibcite{park2010cuda}{14}
\bibcite{strain1999fast}{15}
\bibcite{teichmann1997polygonal}{16}
\bibcite{vleugels1998approximating}{17}
\bibcite{yin2011fast}{18}
\bibcite{zhou2011data}{19}
